<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/rabbit
     http://www.springframework.org/schema/rabbit/spring-rabbit-1.2.xsd">
    <!--配置connection-factory，指定连接rabbit server参数 -->
    <rabbit:connection-factory id="connectionFactory"
                               username="guest" password="guest" host="127.0.0.1" port="5672"
    />


    <!--通过指定下面的admin信息，当前producer中的exchange和queue会在rabbitmq服务器上自动生成 -->
    <rabbit:admin id="connectAdmin" connection-factory="connectionFactory" />

    <!--定义queue -->
<!--    用户请求队列-->
    <rabbit:queue name="clientRequestQueue" durable="true" auto-delete="false"
                  exclusive="false" declared-by="connectAdmin" />
<!--    检测请求队列-->
    <rabbit:queue name="detectRequestQueue" durable="true" auto-delete="false"
                  exclusive="false" declared-by="connectAdmin" />
<!--    检测结果队列-->
    <rabbit:queue name="detectResponseQueue" durable="true" auto-delete="false"
                  exclusive="false" declared-by="connectAdmin" />

    <!-- 定义direct exchange，绑定queue -->
    <rabbit:direct-exchange name="machineRoomExchange"
                            durable="true" auto-delete="false" declared-by="connectAdmin">
        <rabbit:bindings>
            <rabbit:binding queue="clientRequestQueue" key="clientRequestQueueKey"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <rabbit:direct-exchange name="machineRoomExchange"
                            durable="true" auto-delete="false" declared-by="connectAdmin">
        <rabbit:bindings>
            <rabbit:binding queue="detectRequestQueue" key="detectRequestQueueKey"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <rabbit:direct-exchange name="machineRoomExchange"
                            durable="true" auto-delete="false" declared-by="connectAdmin">
        <rabbit:bindings>
            <rabbit:binding queue="detectResponseQueue" key="detectResponseQueueKey"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:direct-exchange>
    <!--定义rabbit template用于数据的接收和发送 -->
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
                     exchange="machineRoomExchange" />


    <!-- 消息接收者 -->
<!--    用户请求队列-->
    <bean id="clientRequestReceiver" class="cn.edu.bupt.bnrc.service.impl.MessageConsumer"></bean>
<!--    &lt;!&ndash; queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 &ndash;&gt;-->
    <rabbit:listener-container
            connection-factory="connectionFactory">
        <rabbit:listener queues="clientRequestQueue" ref="clientRequestReceiver" />
    </rabbit:listener-container>

<!--    检测请求队列-->
<!--    <bean id="detectRequestReceiver" class="cn.edu.bupt.bnrc.service.impl.DetectRequestConsumer"></bean>-->
<!--    &lt;!&ndash; queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 &ndash;&gt;-->
<!--    <rabbit:listener-container-->
<!--            connection-factory="connectionFactory">-->
<!--        <rabbit:listener queues="detectRequestQueue" ref="detectRequestReceiver" />-->
<!--    </rabbit:listener-container>-->

<!--    检测结果队列-->
    <bean id="detectResponseReceiver" class="cn.edu.bupt.bnrc.service.impl.DetectResponseConsumer"></bean>
    <!-- queue litener 观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象 -->
    <rabbit:listener-container
            connection-factory="connectionFactory">
        <rabbit:listener queues="detectResponseQueue" ref="detectResponseReceiver" />
    </rabbit:listener-container>

</beans>