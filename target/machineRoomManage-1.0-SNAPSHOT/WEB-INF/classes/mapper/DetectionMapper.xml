<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.bupt.bnrc.dao.DetectionMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.bupt.bnrc.pojo.Detection" >
    <id column="detect_id" property="detectId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="detect_brand" property="detectBrand" jdbcType="VARCHAR" />
    <result column="detect_version" property="detectVersion" jdbcType="VARCHAR" />
    <result column="detect_location" property="detectLocation" jdbcType="VARCHAR" />
    <result column="detect_time" property="detectTime" jdbcType="VARCHAR" />
    <result column="detect_extra" property="detectExtra" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    detect_id, user_id, detect_brand, detect_version, detect_location, detect_time, detect_extra
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.bupt.bnrc.pojo.DetectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from detection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from detection
    where detect_id = #{detectId,jdbcType=INTEGER}
  </select>

  <select id="selectByDetectTime" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from detection
    where detect_time = #{detectExtra,jdbcType=VARCHAR}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from detection
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByUserAndDetectTime" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from detection
    where user_id = #{userId,jdbcType=INTEGER} and detect_time like #{detectTime,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from detection
    where detect_id = #{detectId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByUserAndTime" >
    delete from detection
    where user_id = #{userId,jdbcType=INTEGER} and detect_time = #{detectTime,jdbcType=VARCHAR}
  </delete>


  <delete id="deleteByExample" parameterType="cn.edu.bupt.bnrc.pojo.DetectionExample" >
    delete from detection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.bupt.bnrc.pojo.Detection" >
    insert into detection (detect_id, user_id, detect_brand, 
      detect_version, detect_location, detect_time, 
      detect_extra)
    values (#{detectId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{detectBrand,jdbcType=VARCHAR}, 
      #{detectVersion,jdbcType=VARCHAR}, #{detectLocation,jdbcType=VARCHAR}, #{detectTime,jdbcType=VARCHAR}, 
      #{detectExtra,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.bupt.bnrc.pojo.Detection" >
    insert into detection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detectId != null" >
        detect_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="detectBrand != null" >
        detect_brand,
      </if>
      <if test="detectVersion != null" >
        detect_version,
      </if>
      <if test="detectLocation != null" >
        detect_location,
      </if>
      <if test="detectTime != null" >
        detect_time,
      </if>
      <if test="detectExtra != null" >
        detect_extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detectId != null" >
        #{detectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="detectBrand != null" >
        #{detectBrand,jdbcType=VARCHAR},
      </if>
      <if test="detectVersion != null" >
        #{detectVersion,jdbcType=VARCHAR},
      </if>
      <if test="detectLocation != null" >
        #{detectLocation,jdbcType=VARCHAR},
      </if>
      <if test="detectTime != null" >
        #{detectTime,jdbcType=VARCHAR},
      </if>
      <if test="detectExtra != null" >
        #{detectExtra,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.bupt.bnrc.pojo.DetectionExample" resultType="java.lang.Integer" >
    select count(*) from detection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update detection
    <set >
      <if test="record.detectId != null" >
        detect_id = #{record.detectId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.detectBrand != null" >
        detect_brand = #{record.detectBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.detectVersion != null" >
        detect_version = #{record.detectVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.detectLocation != null" >
        detect_location = #{record.detectLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.detectTime != null" >
        detect_time = #{record.detectTime,jdbcType=VARCHAR},
      </if>
      <if test="record.detectExtra != null" >
        detect_extra = #{record.detectExtra,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update detection
    set detect_id = #{record.detectId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      detect_brand = #{record.detectBrand,jdbcType=VARCHAR},
      detect_version = #{record.detectVersion,jdbcType=VARCHAR},
      detect_location = #{record.detectLocation,jdbcType=VARCHAR},
      detect_time = #{record.detectTime,jdbcType=VARCHAR},
      detect_extra = #{record.detectExtra,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.bupt.bnrc.pojo.Detection" >
    update detection
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="detectBrand != null" >
        detect_brand = #{detectBrand,jdbcType=VARCHAR},
      </if>
      <if test="detectVersion != null" >
        detect_version = #{detectVersion,jdbcType=VARCHAR},
      </if>
      <if test="detectLocation != null" >
        detect_location = #{detectLocation,jdbcType=VARCHAR},
      </if>
      <if test="detectTime != null" >
        detect_time = #{detectTime,jdbcType=VARCHAR},
      </if>
      <if test="detectExtra != null" >
        detect_extra = #{detectExtra,jdbcType=VARCHAR},
      </if>
    </set>
    where detect_id = #{detectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.bupt.bnrc.pojo.Detection" >
    update detection
    set user_id = #{userId,jdbcType=INTEGER},
      detect_brand = #{detectBrand,jdbcType=VARCHAR},
      detect_version = #{detectVersion,jdbcType=VARCHAR},
      detect_location = #{detectLocation,jdbcType=VARCHAR},
      detect_time = #{detectTime,jdbcType=VARCHAR},
      detect_extra = #{detectExtra,jdbcType=VARCHAR}
    where detect_id = #{detectId,jdbcType=INTEGER}
  </update>

  <update id="updateByDetection" parameterType="cn.edu.bupt.bnrc.pojo.Detection" >
    update detection
    set user_id = #{userId,jdbcType=INTEGER},
      detect_brand = #{detectBrand,jdbcType=VARCHAR},
      detect_version = #{detectVersion,jdbcType=VARCHAR},
      detect_location = #{detectLocation,jdbcType=VARCHAR},
      detect_time = #{detectTime,jdbcType=VARCHAR},
      detect_extra = #{detectExtra,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER} and detect_time = #{detectTime,jdbcType=VARCHAR}
  </update>


</mapper>